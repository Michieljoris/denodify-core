* good to know

* bugs
  
* TODO
** Adapt core modules for use with denodify
These modules are originally adapted for browserify, and cloned from
node-browser-builtins


* nodejs modules and globals to import:
  https://github.com/alexgorbatchev/node-browser-builtins/tree/master/builtin
 https://github.com/substack/node-browserify 
When you require() any of these modules, you will get a browser-specific shim:

assert
buffer
console
constants
crypto
domain
events
http
https
os
path
punycode
querystring
stream
string_decoder
timers
tty
url
util
vm
zlib

Additionally if you use any of these variables, they will be defined in the
bundled output in a browser-appropriate way:

process
   stdout
   stderr
   nextTick
   and maybe all the functions as empty funcs
Buffer ?
global - top-level scope object (window)
__filename - file path of the currently executing file
__dirname - directory path of the currently executing file
require.cache
require.resolve()#
Use the internal require() machinery to look up the location of a module, but
rather than loading the module, just return the resolved filename.

require.cache#
Modules are cached in this object when they are required. By deleting a key
value from this object, the next require will reload the module.


